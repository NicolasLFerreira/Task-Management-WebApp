// This file is auto-generated by @hey-api/openapi-ts

import type {
  RegisterResponse,
  GetUsersResponse,
  GetApiTaskItemGetTaskItemByTaskItemIdResponse,
  GetApiTaskItemGetAllTaskItemsResponse,
  GetApiTaskItemGetTaskItemByUserByUserIdResponse,
} from "./types.gen";

const userDtoSchemaResponseTransformer = (data: any) => {
  if (data.id) {
    data.id = BigInt(data.id.toString());
  }
  return data;
};

export const registerResponseTransformer = async (
  data: any,
): Promise<RegisterResponse> => {
  data = userDtoSchemaResponseTransformer(data);
  return data;
};

export const getUsersResponseTransformer = async (
  data: any,
): Promise<GetUsersResponse> => {
  data = data.map((item: any) => {
    return userDtoSchemaResponseTransformer(item);
  });
  return data;
};

const taskItemDtoSchemaResponseTransformer = (data: any) => {
  if (data.id) {
    data.id = BigInt(data.id.toString());
  }
  if (data.dueDate) {
    data.dueDate = new Date(data.dueDate);
  }
  if (data.creationTime) {
    data.creationTime = new Date(data.creationTime);
  }
  if (data.ownerUserId) {
    data.ownerUserId = BigInt(data.ownerUserId.toString());
  }
  return data;
};

export const getApiTaskItemGetTaskItemByTaskItemIdResponseTransformer = async (
  data: any,
): Promise<GetApiTaskItemGetTaskItemByTaskItemIdResponse> => {
  data = taskItemDtoSchemaResponseTransformer(data);
  return data;
};

const userSchemaResponseTransformer = (data: any) => {
  if (data.id) {
    data.id = BigInt(data.id.toString());
  }
  if (data.ownedTaskItems) {
    data.ownedTaskItems = data.ownedTaskItems.map((item: any) => {
      return taskItemSchemaResponseTransformer(item);
    });
  }
  return data;
};

const taskItemSchemaResponseTransformer = (data: any) => {
  if (data.id) {
    data.id = BigInt(data.id.toString());
  }
  if (data.dueDate) {
    data.dueDate = new Date(data.dueDate);
  }
  if (data.creationTime) {
    data.creationTime = new Date(data.creationTime);
  }
  if (data.ownerUser) {
    data.ownerUser = userSchemaResponseTransformer(data.ownerUser);
  }
  if (data.ownerUserId) {
    data.ownerUserId = BigInt(data.ownerUserId.toString());
  }
  return data;
};

export const getApiTaskItemGetAllTaskItemsResponseTransformer = async (
  data: any,
): Promise<GetApiTaskItemGetAllTaskItemsResponse> => {
  data = data.map((item: any) => {
    return taskItemSchemaResponseTransformer(item);
  });
  return data;
};

export const getApiTaskItemGetTaskItemByUserByUserIdResponseTransformer =
  async (
    data: any,
  ): Promise<GetApiTaskItemGetTaskItemByUserByUserIdResponse> => {
    data = data.map((item: any) => {
      return taskItemSchemaResponseTransformer(item);
    });
    return data;
  };
