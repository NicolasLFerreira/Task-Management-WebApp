// This file is auto-generated by @hey-api/openapi-ts

export const AttachmentDtoSchema = {
  required: ["fileName", "filePath", "fileType", "uploadUsername"],
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int64",
    },
    fileName: {
      type: "string",
      nullable: true,
    },
    filePath: {
      type: "string",
      nullable: true,
    },
    fileSize: {
      type: "integer",
      format: "int64",
    },
    fileType: {
      type: "string",
      nullable: true,
    },
    uploadTime: {
      type: "string",
      format: "date-time",
    },
    uploadUsername: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const BoardCreationDtoSchema = {
  required: ["boardMembers", "description", "lists", "title"],
  type: "object",
  properties: {
    title: {
      type: "string",
      nullable: true,
    },
    description: {
      type: "string",
      nullable: true,
    },
    lists: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ListCreationDto",
      },
      nullable: true,
    },
    boardMembers: {
      type: "array",
      items: {
        type: "integer",
        format: "int64",
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const BoardDtoSchema = {
  required: ["id", "ownerUsername", "title"],
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int64",
    },
    title: {
      type: "string",
      nullable: true,
    },
    description: {
      type: "string",
      nullable: true,
    },
    createdAt: {
      type: "string",
      format: "date-time",
    },
    ownerUsername: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const ChangePasswordDtoSchema = {
  required: ["currentPassword", "newPassword"],
  type: "object",
  properties: {
    currentPassword: {
      type: "string",
      nullable: true,
    },
    newPassword: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const CommentDtoSchema = {
  required: ["content", "userName"],
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int64",
    },
    content: {
      type: "string",
      nullable: true,
    },
    userId: {
      type: "integer",
      format: "int64",
    },
    userName: {
      type: "string",
      nullable: true,
    },
    taskItemId: {
      type: "integer",
      format: "int64",
    },
    creationDate: {
      type: "string",
      format: "date-time",
    },
    userProfilePhotoPath: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const DashboardStatsDtoSchema = {
  type: "object",
  properties: {
    totalTasks: {
      type: "integer",
      format: "int32",
    },
    completedTasks: {
      type: "integer",
      format: "int32",
    },
    inProgressTasks: {
      type: "integer",
      format: "int32",
    },
    todoTasks: {
      type: "integer",
      format: "int32",
    },
    overdueTasks: {
      type: "integer",
      format: "int32",
    },
    dueSoonTasks: {
      type: "integer",
      format: "int32",
    },
    highPriorityTasks: {
      type: "integer",
      format: "int32",
    },
    completionRate: {
      type: "number",
      format: "double",
    },
    totalBoards: {
      type: "integer",
      format: "int32",
    },
  },
  additionalProperties: false,
} as const;

export const EditStatusOrPriorityInputSchema = {
  type: "object",
  properties: {
    progressStatus: {
      $ref: "#/components/schemas/TaskItemStatus",
    },
    priority: {
      $ref: "#/components/schemas/TaskItemPriority",
    },
  },
  additionalProperties: false,
} as const;

export const FilterTaskItemInputDtoSchema = {
  type: "object",
  properties: {
    title: {
      type: "string",
      nullable: true,
    },
    description: {
      type: "string",
      nullable: true,
    },
    status: {
      $ref: "#/components/schemas/TaskItemStatus",
    },
    priority: {
      $ref: "#/components/schemas/TaskItemPriority",
    },
  },
  additionalProperties: false,
} as const;

export const LabelDtoSchema = {
  required: ["color", "name"],
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int64",
    },
    name: {
      type: "string",
      nullable: true,
    },
    color: {
      type: "string",
      nullable: true,
    },
    boardId: {
      type: "integer",
      format: "int64",
    },
  },
  additionalProperties: false,
} as const;

export const ListCreationDtoSchema = {
  required: ["position", "title"],
  type: "object",
  properties: {
    title: {
      type: "string",
      nullable: true,
    },
    position: {
      type: "integer",
      format: "int32",
    },
    boardId: {
      type: "integer",
      format: "int64",
    },
  },
  additionalProperties: false,
} as const;

export const ListDtoSchema = {
  required: ["id", "position", "taskCount", "title"],
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int64",
    },
    title: {
      type: "string",
      nullable: true,
    },
    position: {
      type: "integer",
      format: "int32",
    },
    taskCount: {
      type: "integer",
      format: "int32",
    },
  },
  additionalProperties: false,
} as const;

export const LoginDtoSchema = {
  required: ["email", "password"],
  type: "object",
  properties: {
    email: {
      type: "string",
      nullable: true,
    },
    password: {
      type: "string",
      nullable: true,
    },
    rememberMe: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const MessageDtoSchema = {
  required: ["content", "recipientName", "senderName"],
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int64",
    },
    senderId: {
      type: "integer",
      format: "int64",
    },
    senderName: {
      type: "string",
      nullable: true,
    },
    senderProfilePhotoPath: {
      type: "string",
      nullable: true,
    },
    recipientId: {
      type: "integer",
      format: "int64",
    },
    recipientName: {
      type: "string",
      nullable: true,
    },
    recipientProfilePhotoPath: {
      type: "string",
      nullable: true,
    },
    content: {
      type: "string",
      nullable: true,
    },
    creationDate: {
      type: "string",
      format: "date-time",
    },
    isRead: {
      type: "boolean",
    },
    readDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const MoveTaskDtoSchema = {
  type: "object",
  properties: {
    taskId: {
      type: "integer",
      format: "int64",
    },
    targetListId: {
      type: "integer",
      format: "int64",
    },
    position: {
      type: "integer",
      format: "int32",
    },
  },
  additionalProperties: false,
} as const;

export const NotificationDtoSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int64",
    },
    type: {
      $ref: "#/components/schemas/NotificationType",
    },
    content: {
      type: "string",
      nullable: true,
    },
    userId: {
      type: "integer",
      format: "int64",
    },
    isRead: {
      type: "boolean",
    },
    creationDate: {
      type: "string",
      format: "date-time",
    },
    entityType: {
      type: "string",
      nullable: true,
    },
    entityId: {
      type: "integer",
      format: "int64",
      nullable: true,
    },
    actionLink: {
      type: "string",
      nullable: true,
    },
    relatedEntityType: {
      type: "string",
      nullable: true,
    },
    relatedEntityId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const NotificationTypeSchema = {
  enum: [0, 1, 2, 3, 4, 5],
  type: "integer",
  format: "int32",
} as const;

export const RecentActivityDtoSchema = {
  required: ["status", "title", "type"],
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int64",
    },
    type: {
      type: "string",
      nullable: true,
    },
    title: {
      type: "string",
      nullable: true,
    },
    date: {
      type: "string",
      format: "date-time",
    },
    status: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const RegisterDtoSchema = {
  required: ["email", "name", "password", "username"],
  type: "object",
  properties: {
    name: {
      type: "string",
      nullable: true,
    },
    email: {
      type: "string",
      nullable: true,
    },
    password: {
      type: "string",
      nullable: true,
    },
    username: {
      type: "string",
      nullable: true,
    },
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const ReorderListsDtoSchema = {
  type: "object",
  properties: {
    boardId: {
      type: "integer",
      format: "int64",
    },
    listIds: {
      type: "array",
      items: {
        type: "integer",
        format: "int64",
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const ReorderTasksDtoSchema = {
  type: "object",
  properties: {
    listId: {
      type: "integer",
      format: "int64",
    },
    taskIds: {
      type: "array",
      items: {
        type: "integer",
        format: "int64",
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const TaskItemCreationDtoSchema = {
  required: ["title"],
  type: "object",
  properties: {
    title: {
      type: "string",
      nullable: true,
    },
    description: {
      type: "string",
      nullable: true,
    },
    dueDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    priority: {
      $ref: "#/components/schemas/TaskItemPriority",
    },
    progressStatus: {
      $ref: "#/components/schemas/TaskItemStatus",
    },
    listId: {
      type: "integer",
      format: "int64",
    },
  },
  additionalProperties: false,
} as const;

export const TaskItemDtoSchema = {
  required: ["title"],
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int64",
    },
    title: {
      type: "string",
      nullable: true,
    },
    description: {
      type: "string",
      nullable: true,
    },
    dueDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    priority: {
      $ref: "#/components/schemas/TaskItemPriority",
    },
    progressStatus: {
      $ref: "#/components/schemas/TaskItemStatus",
    },
    position: {
      type: "integer",
      format: "int32",
    },
    createdAt: {
      type: "string",
      format: "date-time",
    },
  },
  additionalProperties: false,
} as const;

export const TaskItemPrioritySchema = {
  enum: [0, 1, 2, 3],
  type: "integer",
  format: "int32",
} as const;

export const TaskItemStatusSchema = {
  enum: [0, 1, 2, 3, 4],
  type: "integer",
  format: "int32",
} as const;

export const UpcomingTaskDtoSchema = {
  required: ["priority", "status", "title"],
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int64",
    },
    title: {
      type: "string",
      nullable: true,
    },
    dueDate: {
      type: "string",
      format: "date-time",
    },
    priority: {
      type: "string",
      nullable: true,
    },
    status: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const UpdateProfileDtoSchema = {
  type: "object",
  properties: {
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    email: {
      type: "string",
      nullable: true,
    },
    username: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const UserDtoSchema = {
  required: ["email", "firstName", "lastName", "username"],
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int64",
    },
    username: {
      type: "string",
      nullable: true,
    },
    email: {
      type: "string",
      nullable: true,
    },
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    profilePhotoPath: {
      type: "string",
      nullable: true,
    },
    creationDate: {
      type: "string",
      format: "date-time",
    },
    lastLogin: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    fullName: {
      type: "string",
      nullable: true,
      readOnly: true,
    },
    initials: {
      type: "string",
      nullable: true,
      readOnly: true,
    },
  },
  additionalProperties: false,
} as const;
