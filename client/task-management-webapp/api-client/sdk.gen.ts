// This file is auto-generated by @hey-api/openapi-ts

import type {
  Options as ClientOptions,
  TDataShape,
  Client,
} from "@hey-api/client-axios";
import type {
  LoginData,
  LoginResponse,
  RegisterData,
  RegisterResponse,
  GetApiSampleGetUsersData,
  GetApiSampleGetUsersResponse,
  GetApiTasksData,
  GetApiTasksResponse,
  PostApiTasksData,
  DeleteApiTasksByTaskItemIdData,
  GetApiTasksByTaskItemIdData,
  GetApiTasksByTaskItemIdResponse,
  PutApiTasksByTaskItemIdData,
  GetApiTasksUserByUserIdData,
  GetApiTasksUserByUserIdResponse,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";
import {
  getApiTasksResponseTransformer,
  getApiTasksByTaskItemIdResponseTransformer,
  getApiTasksUserByUserIdResponseTransformer,
} from "./transformers.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

export class AccountService {
  public static login<ThrowOnError extends boolean = false>(
    options?: Options<LoginData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      LoginResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/Account/login",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  public static register<ThrowOnError extends boolean = false>(
    options?: Options<RegisterData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      RegisterResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/Account/register",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }
}

export class SampleService {
  public static getApiSampleGetUsers<ThrowOnError extends boolean = false>(
    options?: Options<GetApiSampleGetUsersData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetApiSampleGetUsersResponse,
      unknown,
      ThrowOnError
    >({
      url: "/api/Sample/GetUsers",
      ...options,
    });
  }
}

export class TaskItemService {
  public static getApiTasks<ThrowOnError extends boolean = false>(
    options?: Options<GetApiTasksData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetApiTasksResponse,
      unknown,
      ThrowOnError
    >({
      responseTransformer: getApiTasksResponseTransformer,
      url: "/api/tasks",
      ...options,
    });
  }

  public static postApiTasks<ThrowOnError extends boolean = false>(
    options?: Options<PostApiTasksData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      unknown,
      unknown,
      ThrowOnError
    >({
      url: "/api/tasks",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  public static deleteApiTasksByTaskItemId<
    ThrowOnError extends boolean = false,
  >(options: Options<DeleteApiTasksByTaskItemIdData, ThrowOnError>) {
    return (options.client ?? _heyApiClient).delete<
      unknown,
      unknown,
      ThrowOnError
    >({
      url: "/api/tasks/{taskItemId}",
      ...options,
    });
  }

  public static getApiTasksByTaskItemId<ThrowOnError extends boolean = false>(
    options: Options<GetApiTasksByTaskItemIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      GetApiTasksByTaskItemIdResponse,
      unknown,
      ThrowOnError
    >({
      responseTransformer: getApiTasksByTaskItemIdResponseTransformer,
      url: "/api/tasks/{taskItemId}",
      ...options,
    });
  }

  public static putApiTasksByTaskItemId<ThrowOnError extends boolean = false>(
    options: Options<PutApiTasksByTaskItemIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).put<
      unknown,
      unknown,
      ThrowOnError
    >({
      url: "/api/tasks/{taskItemId}",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  public static getApiTasksUserByUserId<ThrowOnError extends boolean = false>(
    options: Options<GetApiTasksUserByUserIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      GetApiTasksUserByUserIdResponse,
      unknown,
      ThrowOnError
    >({
      responseTransformer: getApiTasksUserByUserIdResponseTransformer,
      url: "/api/tasks/user/{userId}",
      ...options,
    });
  }
}
